name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install API dependencies
      run: |
        cd api
        pip install -r requirements.txt
    
    - name: Run API unit tests
      run: |
        cd api
        python -m pytest tests/test_basic.py -v --cov=. --cov-report=xml
    
    - name: Run API integration tests
      run: |
        cd api
        python -m pytest tests/integration/ -v
    
    - name: Upload API coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./api/coverage.xml
        flags: api-tests
        name: api-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci --legacy-peer-deps
    
    - name: Run TypeScript type checking
      run: |
        cd web
        npm run typecheck
    
    - name: Run ESLint
      run: |
        cd web
        npm run lint
    
    - name: Run Jest tests
      run: |
        cd web
        npm run test:coverage -- --passWithNoTests
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./web/coverage/lcov.info
        flags: frontend-tests
        name: frontend-coverage

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [api-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install API dependencies
      run: |
        cd api
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci --legacy-peer-deps
    
    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps
    
    - name: Build frontend
      run: |
        cd web
        npm run build
    
    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
      env:
        CI: true
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: web/playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  quality-gate:
    runs-on: ubuntu-latest
    needs: [api-tests, frontend-tests, e2e-tests, security-scan]
    if: always()
    
    steps:
    - name: Check job results
      run: |
        if [[ "${{ needs.api-tests.result }}" != "success" ]]; then
          echo "API tests failed"
          exit 1
        fi
        if [[ "${{ needs.frontend-tests.result }}" != "success" ]]; then
          echo "Frontend tests failed"
          exit 1
        fi
        if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
          echo "E2E tests failed"
          exit 1
        fi
        if [[ "${{ needs.security-scan.result }}" != "success" ]]; then
          echo "Security scan failed"
          exit 1
        fi
        echo "All quality gates passed âœ…"